package euler

object problem2 extends App {


  //  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  //  By starting with 1 and 2, the first 10 terms will be:
  //
  //    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  //
  //  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  //  find the sum of the even-valued terms.

  def fibSum(limit: Int)(filter: Int => Boolean): Int = {

    def fibWithSum(a: Int, b: Int, acc: Int ): Int = {
      val term = a + b

      if (term < limit) {
        val sum = if (filter(term)) acc + term else acc
        fibWithSum(b, a + b, sum)
      } else acc
    }

    fibWithSum(1,2, 2)
  }

  val ans = fibSum(4000000)((x) => x % 2 == 0)

  println(ans) // 4613732
}
